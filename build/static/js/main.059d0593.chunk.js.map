{"version":3,"sources":["components/NewTask.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["NewTask","props","useState","userInput","setUserInput","onSubmit","event","preventDefault","formData","task","id","Math","random","onSaveFormData","className","value","type","placeholder","onChange","target","required","TaskItem","isDelete","setDelete","isOpaque","setIsOpaque","document","getElementById","htmlFor","todo","onClick","TaskList","tasks","map","item","App","dummyTasks","toDoList","setToDoList","userData","prev","ReactDOM","render"],"mappings":"4RAwCeA,EArCC,SAACC,GACf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAcA,OACE,sBAAMC,SATc,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAW,CAAEC,KAAMN,EAAWO,GAAIC,KAAKC,UAC7CX,EAAMY,eAAeL,GAErBJ,EAAa,KAIb,SACE,qBAAKU,UAAU,yBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,yCACA,uBACEC,MAAOZ,EACPa,KAAK,OACLC,YAAY,aACZC,SArBU,SAACZ,GACnBF,EAAaE,EAAMa,OAAOJ,QAqBlBK,UAAQ,IAEV,yBAAQJ,KAAK,SAAb,UACE,sBAAMF,UAAU,YAAhB,sBACA,sBAAMA,UAAU,aAAhB,4BCQGO,G,MArCE,SAACpB,GAChB,MAA8BC,oBAAS,GAAvC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAgCrB,oBAAS,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KAgBA,OAAKH,EAeI,KAbL,sBAAKR,UAAU,YAAYJ,GAAIT,EAAMS,GAAK,IAA1C,UACE,sBAAKI,UAAU,eAAf,UACE,uBACEE,KAAK,WACLN,GAAIT,EAAMS,GAAK,GACfQ,SAjBmB,WACvBM,GACFE,SAASC,eAAe1B,EAAMS,GAAK,KAAKI,WAAa,WACrDW,GAAY,KAEZC,SAASC,eAAe1B,EAAMS,GAAK,KAAKI,UAAY,YACpDW,GAAY,OAaR,uBAAOG,QAAS3B,EAAMS,GAAK,GAA3B,SAAgCT,EAAM4B,UAExC,qBAAKf,UAAU,cAAcgB,QAzBZ,WACrBP,GAAU,WCKCQ,G,MAVE,SAAC9B,GAChB,OACE,qBAAKa,UAAU,iBAAf,SACKb,EAAM+B,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAUL,KAAMK,EAAKzB,KAAoBC,GAAIwB,EAAKxB,IAAlBwB,EAAKxB,WCiBhCyB,MApBf,WACE,IAAMC,EAAa,CACjB,CAAE3B,KAAM,sBAAuBC,GAAIC,KAAKC,UACxC,CAAEH,KAAM,uBAAwBC,GAAIC,KAAKC,WAG3C,EAAgCV,mBAASkC,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OACE,gCACE,cAAC,EAAD,CAASzB,eANQ,SAAC0B,GACpBD,GAAY,SAAAE,GAAI,OAAKD,GAAL,mBAAiBC,UAM/B,cAAC,EAAD,CAAUR,MAAOK,QCdvBI,IAASC,OAAO,cAAC,EAAD,IAAShB,SAASC,eAAe,W","file":"static/js/main.059d0593.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NewTask.css\";\n\nconst NewTask = (props) => {\n  const [userInput, setUserInput] = useState(\"\");\n\n  const taskHandler = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const formData = { task: userInput, id: Math.random() };\n    props.onSaveFormData(formData);\n\n    setUserInput(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"create-task__container\">\n        <div className=\"create-task__interface\">\n          <p> To Do's</p>\n          <input\n            value={userInput}\n            type=\"text\"\n            placeholder=\"Enter task\"\n            onChange={taskHandler}\n            required\n          />\n          <button type=\"submit\">\n            <span className=\"long-text\">Add Task</span>\n            <span className=\"short-text\">Add</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default NewTask;\n","import { useState } from \"react\";\nimport \"./TaskItem.css\";\n\nconst TaskItem = (props) => {\n  const [isDelete, setDelete] = useState(false);\n  const [isOpaque, setIsOpaque] = useState(true);\n\n  const onClickHandler = () => {\n    setDelete(true);\n  };\n\n  const opacityChangeHandler = () => {\n    if (isOpaque) {\n      document.getElementById(props.id + \"1\").className += \" opacity\";\n      setIsOpaque(false);\n    } else {\n      document.getElementById(props.id + \"1\").className = \"task-item\";\n      setIsOpaque(true);\n    }\n  };\n\n  if (!isDelete) {\n    return (\n      <div className=\"task-item\" id={props.id + \"1\"}>\n        <div className=\"task-details\">\n          <input\n            type=\"checkbox\"\n            id={props.id + \"\"}\n            onChange={opacityChangeHandler}\n          />\n          <label htmlFor={props.id + \"\"}>{props.todo}</label>\n        </div>\n        <div className=\"delete-task\" onClick={onClickHandler}></div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TaskItem;\n","import TaskItem from \"./TaskItem\";\nimport \"./TaskList.css\";\n\nconst TaskList = (props) => {\n  return (\n    <div className=\"task-container\">\n        {props.tasks.map((item) => (\n          <TaskItem todo={item.task} key={item.id} id={item.id} />\n        ))}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, {useState} from 'react';\nimport NewTask from \"./components/NewTask\";\nimport TaskList from \"./components/TaskList\";\n\nfunction App() {\n  const dummyTasks = [\n    { task: \"Begin React Project\", id: Math.random() },\n    { task: \"Finish React Project\", id: Math.random() },\n  ];\n  \n  const [toDoList, setToDoList] = useState(dummyTasks);\n\n  const saveFormData = (userData) => {\n    setToDoList(prev => [userData,...prev])\n  };\n\n  return (\n    <div>\n      <NewTask onSaveFormData={saveFormData} />\n      <TaskList tasks={toDoList} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}